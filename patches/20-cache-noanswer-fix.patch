--- Cache.pm.orig	2013-07-07 18:29:21.000000000 +0100
+++ Cache.pm	2013-07-07 18:30:46.000000000 +0100
@@ -133,8 +133,13 @@
     push @s, $self->store_rrs($dns_packet->answer);
     push @s, $self->store_rrs($dns_packet->authority);
     push @s, $self->store_rrs($dns_packet->additional);
-    print STDERR "DEBUG: Storing cache for [$key;structure]\n";
-    $self -> {dns_cache} -> {"$key;structure"} = \@s;
+    if ($dns_packet->answer) {
+        push @s, $self->store_rrs($dns_packet->question);
+        print STDERR "DEBUG: Storing cache for [$key;structure]\n";
+        $self -> {dns_cache} -> {"$key;structure"} = \@s;
+    } else {
+        print STDERR "DEBUG: Not storing cache for [$key;structure]=".Dumper(@s)."\n";
+    }
   }
   $self->flush_expired_ttls;
   return 1;
@@ -151,6 +156,7 @@
     my $key = join("\t",$rr->name.".",$rr->class,$rr->type);
     my $rdatastr = $rr->rdatastr();
     my $ttl = $rr->ttl();
+    print STDERR "DEBUG: Cache record ttl $ttl:$key";
     my $expiration = $ttl + time;
     $answer_hash->{$key} ||= [];
     push @{$answer_hash->{$key}},
@@ -172,7 +178,7 @@
 sub flush_expired_ttls {
   my $self = shift;
   my $now = time;
-  return unless $now > $expiration_check;
+  return unless $expiration_check && $now > $expiration_check;
   my ($next_expiration_check, $lookup, $cache);
   $next_expiration_check = undef;
   while (($lookup,$cache) = each %{ $self -> {dns_cache} }) {
